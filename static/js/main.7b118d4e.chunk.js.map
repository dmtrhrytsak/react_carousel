{"version":3,"sources":["components/Wrapper/Wrapper.tsx","components/Image/Image.tsx","components/CarouselController/CarouselController.tsx","components/Carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["Wrapper","children","className","Image","src","alt","width","classNames","style","CarouselController","imagesCount","visibleFrames","step","imageWidth","transitionSpeed","changeVisibleFrames","changeStep","changeImageWidth","changeTransitionSpeed","htmlFor","type","value","id","min","max","onKeyDown","event","preventDefault","onChange","Carousel","images","useState","setVisibleFrames","setImageWidth","currentPosition","setCurrentPosition","setStep","setTransitionSpped","limit","useMemo","length","transform","transitionDuration","map","image","idx","disabled","onClick","Math","newVisibleFramesCount","target","newLimit","newImageWidth","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b118d4e.chunk.js","sourcesContent":["import './Wrapper.scss';\n\nconst Wrapper: React.FC = ({ children }) => {\n  return <div className=\"Wrapper\">{children}</div>;\n};\n\nexport { Wrapper };\n","import classNames from 'classnames';\n\ntype Props = {\n  src: string;\n  alt: string;\n  width: number;\n  className: string;\n};\n\nconst Image: React.FC<Props> = ({\n  src, alt, width, className,\n}) => {\n  return (\n    <img\n      src={src}\n      alt={alt}\n      className={classNames(className)}\n      style={{ width: `${width}px` }}\n    />\n  );\n};\n\nexport { Image };\n","import './CarouselController.scss';\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\ntype Props = {\n  imagesCount: number;\n  visibleFrames: number;\n  step: number;\n  imageWidth: number;\n  transitionSpeed: number;\n  changeVisibleFrames: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  changeStep: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  changeImageWidth: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  changeTransitionSpeed: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst CarouselController: React.FC<Props> = ({\n  imagesCount,\n  visibleFrames,\n  step,\n  imageWidth,\n  transitionSpeed,\n  changeVisibleFrames,\n  changeStep,\n  changeImageWidth,\n  changeTransitionSpeed,\n}) => {\n  return (\n    <form className=\"CarouselController\">\n      <div className=\"CarouselController__controller-wrapper\">\n        <label htmlFor=\"visibleFrames\">Visible Frames:</label>\n        <input\n          type=\"number\"\n          value={visibleFrames}\n          id=\"visibleFrames\"\n          min=\"1\"\n          max={imagesCount}\n          className=\"CarouselController__controller CarouselController__controller--number\"\n          onKeyDown={(event) => event.preventDefault()}\n          onChange={changeVisibleFrames}\n        />\n      </div>\n\n      <div className=\"CarouselController__controller-wrapper\">\n        <label htmlFor=\"step\">Step:</label>\n        <input\n          type=\"number\"\n          value={step}\n          id=\"step\"\n          min=\"1\"\n          max={imagesCount}\n          className=\"CarouselController__controller CarouselController__controller--number\"\n          onKeyDown={(event) => event.preventDefault()}\n          onChange={changeStep}\n        />\n      </div>\n\n      <div className=\"CarouselController__controller-wrapper\">\n        <label htmlFor=\"step\">Frame Width:</label>\n        <input\n          type=\"range\"\n          value={imageWidth}\n          id=\"imageWidth\"\n          min=\"50\"\n          max=\"150\"\n          className=\"CarouselController__controller\"\n          onChange={changeImageWidth}\n        />\n      </div>\n\n      <div className=\"CarouselController__controller-wrapper\">\n        <label htmlFor=\"step\">Transition Speed:</label>\n        <input\n          type=\"range\"\n          value={transitionSpeed}\n          id=\"transitionSpeed\"\n          min=\"0\"\n          max=\"3000\"\n          className=\"CarouselController__controller\"\n          onChange={changeTransitionSpeed}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport { CarouselController };\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState, useMemo } from 'react';\n\nimport { Image } from '../Image';\nimport { CarouselController } from '../CarouselController';\n\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel: React.FC<Props> = ({ images }) => {\n  const [visibleFrames, setVisibleFrames] = useState(3);\n  const [imageWidth, setImageWidth] = useState(130);\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const [step, setStep] = useState(1);\n  const [transitionSpeed, setTransitionSpped] = useState(1000);\n\n  const limit = useMemo(\n    () => imageWidth * images.length - visibleFrames * imageWidth,\n    [images, imageWidth, visibleFrames],\n  );\n\n  const showNext = () => {\n    setCurrentPosition(Math.min(currentPosition + step * imageWidth, limit));\n  };\n\n  const showPrevious = () => {\n    setCurrentPosition(Math.max(0, currentPosition - step * imageWidth));\n  };\n\n  const changeVisibleFrames = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newVisibleFramesCount = +event.target.value;\n\n    setVisibleFrames(newVisibleFramesCount);\n\n    const newLimit\n      = imageWidth * images.length - newVisibleFramesCount * imageWidth;\n\n    if (currentPosition + step * imageWidth > newLimit) {\n      setCurrentPosition(newLimit);\n    }\n  };\n\n  const changeStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setStep(+event.target.value);\n  };\n\n  const changeTransitionSpeed = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setTransitionSpped(+event.target.value);\n  };\n\n  const changeImageWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newImageWidth = +event.target.value;\n\n    setImageWidth(newImageWidth);\n\n    const newLimit = newImageWidth * images.length - visibleFrames * imageWidth;\n\n    if (currentPosition + step * newImageWidth > newLimit) {\n      setCurrentPosition(newLimit);\n    }\n\n    if (currentPosition - step * newImageWidth <= 0) {\n      setCurrentPosition(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__spotlight\">\n        <div\n          className=\"Carousel__images-wrapper\"\n          style={{ width: `${visibleFrames * imageWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__images\"\n            style={{\n              transform: `translateX(${-currentPosition}px)`,\n              transitionDuration: `${transitionSpeed}ms`,\n            }}\n          >\n            {images.map((image, idx) => (\n              <li key={image} className=\"Carousel__image-item\">\n                <Image\n                  src={image}\n                  alt={`cat-${idx + 1}`}\n                  width={imageWidth}\n                  className=\"Carousel__image\"\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button Carousel__button--previous\"\n            disabled={currentPosition === 0}\n            onClick={showPrevious}\n          />\n          <button\n            type=\"button\"\n            className=\"Carousel__button Carousel__button--next\"\n            disabled={currentPosition >= limit}\n            onClick={showNext}\n          />\n        </div>\n      </div>\n\n      <CarouselController\n        imagesCount={images.length}\n        visibleFrames={visibleFrames}\n        step={step}\n        imageWidth={imageWidth}\n        transitionSpeed={transitionSpeed}\n        changeVisibleFrames={changeVisibleFrames}\n        changeStep={changeStep}\n        changeImageWidth={changeImageWidth}\n        changeTransitionSpeed={changeTransitionSpeed}\n      />\n    </div>\n  );\n};\n\nexport { Carousel };\n","import { Wrapper } from './components/Wrapper';\nimport { Carousel } from './components/Carousel';\n\nimport './App.scss';\n\nconst images = [\n  './img/cats/cat-1.svg',\n  './img/cats/cat-2.svg',\n  './img/cats/cat-3.svg',\n  './img/cats/cat-4.svg',\n  './img/cats/cat-5.svg',\n  './img/cats/cat-6.svg',\n  './img/cats/cat-7.svg',\n  './img/cats/cat-8.svg',\n  './img/cats/cat-9.svg',\n];\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Carousel images={images} />\n      </Wrapper>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './lib/reset.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}